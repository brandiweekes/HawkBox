<?xml version="1.0" encoding="utf-8" ?>
<Application xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="Crawl.App">
    <Application.Resources>
        <ResourceDictionary>
            <Color x:Key="Primary">#25CC8A</Color>
            <Color x:Key="PrimaryDark">#06B26E</Color> 
            <Color x:Key="Accent">#FFC02F</Color>
            <Color x:Key="LightBackgroundColor">#C815FF</Color>
            <Color x:Key="DarkBackgroundColor">#691882</Color>
            <Color x:Key="MediumGrayTextColor">#4d4d4d</Color>
            <Color x:Key="YellowTextColor">#FFC02F</Color>

            <Style TargetType="NavigationPage">
                <Setter Property="BarBackgroundColor" Value="{StaticResource PrimaryDark}" />
                <Setter Property="BarTextColor"  Value="{StaticResource YellowTextColor}" />
                <Setter Property="BackgroundColor" Value="{StaticResource DarkBackgroundColor}" />
                
            </Style>

            <Style TargetType="Label">
                <Setter Property="HorizontalOptions" Value="StartAndExpand" />
                <Setter Property="VerticalOptions" Value="CenterAndExpand" />
                <Setter Property="TextColor" Value="{StaticResource YellowTextColor}" />
                <Setter Property="FontAttributes" Value="None" />
                <Setter Property="FontSize" Value="Small" />
                
            </Style>

            <Style TargetType="Label"
                    x:Key="LabelBase"
                    BasedOn="{StaticResource Xamarin.Forms.Label}">
                <Setter Property="HorizontalOptions" Value="StartAndExpand" />
            </Style>
            
            <Style TargetType="Label"
                    x:Key="LabelLeft"
                    BasedOn="{StaticResource LabelBase}">
                <Setter Property="HorizontalOptions" Value="StartAndExpand" />
            </Style>

            <Style TargetType="Label"
                   x:Key="LabelRight"
                   BasedOn="{StaticResource LabelBase}">
                <Setter Property="HorizontalOptions" Value="EndAndExpand" />
            </Style>

            <Style TargetType="Label"
                   x:Key="DebugSwitchLabel">
                <Setter Property="HorizontalOptions" Value="StartAndExpand" />
                <Setter Property="VerticalOptions" Value="CenterAndExpand" />
                <Setter Property="TextColor" Value="{DynamicResource PrimaryDark}" />
                <Setter Property="FontAttributes" Value="Bold" />
                <Setter Property="FontSize" Value="Small" />
                <Setter Property="WidthRequest" Value="500"/>
            </Style>

            <Style TargetType="Image"
                x:Key="CharacterRelativeBox">
                <Setter Property="WidthRequest" Value="50"/>
                <Setter Property="HeightRequest" Value="75" />
                <Setter Property="RelativeLayout.YConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Y, Factor=0, Constant=0}" />
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="CharacterRelativeBox1"
                BasedOn="{StaticResource CharacterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.1, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="CharacterRelativeBox2"
                BasedOn="{StaticResource CharacterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.25, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="CharacterRelativeBox3"
                BasedOn="{StaticResource CharacterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.4, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="CharacterRelativeBox4"
                BasedOn="{StaticResource CharacterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.55, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="CharacterRelativeBox5"
                BasedOn="{StaticResource CharacterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.7, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="CharacterRelativeBox6"
                BasedOn="{StaticResource CharacterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.85, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="MonsterRelativeBox">
                <Setter Property="WidthRequest" Value="50"/>
                <Setter Property="HeightRequest" Value="60" />
                <Setter Property="RelativeLayout.YConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Y, Factor=0, Constant=10}" />
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="MonsterRelativeBox1"
                BasedOn="{StaticResource MonsterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.1, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="MonsterRelativeBox2"
                BasedOn="{StaticResource MonsterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.25, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="MonsterRelativeBox3"
                BasedOn="{StaticResource MonsterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.4, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="MonsterRelativeBox4"
                BasedOn="{StaticResource MonsterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.55, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="MonsterRelativeBox5"
                BasedOn="{StaticResource MonsterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.7, Constant=20}" />
            </Style>

            <Style TargetType="Image"
                x:Key="MonsterRelativeBox6"
                BasedOn="{StaticResource MonsterRelativeBox}">
                <Setter Property="RelativeLayout.XConstraint" Value="{ConstraintExpression Type=RelativeToParent, Property=Width, Factor=0.85, Constant=20}" />
            </Style>

            <Style TargetType="Stepper">
                <Setter Property="BackgroundColor" Value="{DynamicResource LightBackgroundColor}"/>
                <Setter Property="Minimum" Value="1"/>
                <Setter Property="Increment" Value="1"/>
                <Setter Property="HorizontalOptions" Value="Center"/>
            </Style>

            <Style TargetType="Stepper"
                x:Key="Stepper5"
                BasedOn="{StaticResource Xamarin.Forms.Stepper}">
                <Setter Property="Maximum" Value="5"/>
            </Style>

            <Style TargetType="Stepper"
                x:Key="Stepper8"
                BasedOn="{StaticResource Xamarin.Forms.Stepper}">
                <Setter Property="Maximum" Value="8"/>
            </Style>

            <Style TargetType="Stepper"
                x:Key="Stepper10"
                BasedOn="{StaticResource Xamarin.Forms.Stepper}">
                <Setter Property="Maximum" Value="10"/>
            </Style>

            <Style TargetType="Stepper"
                x:Key="Stepper20"
                BasedOn="{StaticResource Xamarin.Forms.Stepper}">
                <Setter Property="Maximum" Value="20"/>
            </Style>

            <Style TargetType="Stepper"
                x:Key="Stepper355k"
                BasedOn="{StaticResource Xamarin.Forms.Stepper}">
                <Setter Property="Maximum" Value="355000"/>
                <Setter Property="Increment" Value="300"/>
            </Style>

            <Style TargetType="Switch">
                <Setter Property="OnColor"  Value="{DynamicResource LightBackgroundColor}"/>
            </Style>

            <Style TargetType="Button">
                <Setter Property="BackgroundColor" Value="{DynamicResource YellowTextColor}"/>
                <Setter Property="TextColor" Value="{DynamicResource DarkBackgroundColor}"/>
                <Setter Property="FontAttributes" Value="Bold"/>
            </Style>

            <Style TargetType="Entry">
                <Setter Property="BackgroundColor" Value="{DynamicResource LightBackgroundColor}"/>
                <Setter Property="TextColor" Value="{DynamicResource YellowTextColor}" />
                <Setter Property="FontAttributes" Value="Bold"/>
            </Style>


        </ResourceDictionary>
    </Application.Resources>
</Application>